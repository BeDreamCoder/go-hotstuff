// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ab.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// These status codes are intended to resemble selected HTTP status codes
type Status int32

const (
	Status_UNKNOWN                  Status = 0
	Status_SUCCESS                  Status = 200
	Status_BAD_REQUEST              Status = 400
	Status_FORBIDDEN                Status = 403
	Status_NOT_FOUND                Status = 404
	Status_REQUEST_ENTITY_TOO_LARGE Status = 413
	Status_INTERNAL_SERVER_ERROR    Status = 500
	Status_NOT_IMPLEMENTED          Status = 501
	Status_SERVICE_UNAVAILABLE      Status = 503
)

var Status_name = map[int32]string{
	0:   "UNKNOWN",
	200: "SUCCESS",
	400: "BAD_REQUEST",
	403: "FORBIDDEN",
	404: "NOT_FOUND",
	413: "REQUEST_ENTITY_TOO_LARGE",
	500: "INTERNAL_SERVER_ERROR",
	501: "NOT_IMPLEMENTED",
	503: "SERVICE_UNAVAILABLE",
}

var Status_value = map[string]int32{
	"UNKNOWN":                  0,
	"SUCCESS":                  200,
	"BAD_REQUEST":              400,
	"FORBIDDEN":                403,
	"NOT_FOUND":                404,
	"REQUEST_ENTITY_TOO_LARGE": 413,
	"INTERNAL_SERVER_ERROR":    500,
	"NOT_IMPLEMENTED":          501,
	"SERVICE_UNAVAILABLE":      503,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_23048cda704d433a, []int{0}
}

type BroadcastResponse struct {
	// Status code, which may be used to programatically respond to success/failure
	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.Status" json:"status,omitempty"`
	// Info string which may contain additional information about the status returned
	Info                 string   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BroadcastResponse) Reset()         { *m = BroadcastResponse{} }
func (m *BroadcastResponse) String() string { return proto.CompactTextString(m) }
func (*BroadcastResponse) ProtoMessage()    {}
func (*BroadcastResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23048cda704d433a, []int{0}
}

func (m *BroadcastResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadcastResponse.Unmarshal(m, b)
}
func (m *BroadcastResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadcastResponse.Marshal(b, m, deterministic)
}
func (m *BroadcastResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcastResponse.Merge(m, src)
}
func (m *BroadcastResponse) XXX_Size() int {
	return xxx_messageInfo_BroadcastResponse.Size(m)
}
func (m *BroadcastResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcastResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcastResponse proto.InternalMessageInfo

func (m *BroadcastResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UNKNOWN
}

func (m *BroadcastResponse) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.Status", Status_name, Status_value)
	proto.RegisterType((*BroadcastResponse)(nil), "pb.BroadcastResponse")
}

func init() { proto.RegisterFile("ab.proto", fileDescriptor_23048cda704d433a) }

var fileDescriptor_23048cda704d433a = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x41, 0x4e, 0xc2, 0x40,
	0x14, 0x86, 0x2d, 0x35, 0x20, 0x0f, 0x03, 0xe3, 0x28, 0x49, 0x43, 0x62, 0x42, 0x58, 0x11, 0x17,
	0xc4, 0xc0, 0x09, 0x5a, 0xfa, 0x30, 0x0d, 0x65, 0xaa, 0xd3, 0x16, 0xe3, 0x6a, 0xd2, 0x62, 0x51,
	0x16, 0x32, 0x0d, 0x33, 0xdc, 0xc3, 0x44, 0xb7, 0xde, 0xc5, 0xa5, 0x07, 0xd2, 0xb8, 0x35, 0x2d,
	0x44, 0x17, 0xee, 0xe6, 0xfb, 0xe7, 0xcb, 0x5b, 0x7c, 0x70, 0x94, 0xa4, 0x83, 0x7c, 0x23, 0xb5,
	0xa4, 0x95, 0x3c, 0xed, 0x34, 0x1f, 0xa5, 0x56, 0x7a, 0xbb, 0x5c, 0xee, 0xb6, 0xde, 0x14, 0x4e,
	0x9c, 0x8d, 0x4c, 0xee, 0x17, 0x89, 0xd2, 0x3c, 0x53, 0xb9, 0x5c, 0xab, 0x8c, 0xf6, 0xa0, 0xaa,
	0x74, 0xa2, 0xb7, 0xca, 0x32, 0xba, 0x46, 0xbf, 0x39, 0x84, 0x41, 0x9e, 0x0e, 0xc2, 0x72, 0xe1,
	0xfb, 0x1f, 0x4a, 0xe1, 0x70, 0xb5, 0x5e, 0x4a, 0xab, 0xd2, 0x35, 0xfa, 0x75, 0x5e, 0xbe, 0x2f,
	0xde, 0x0d, 0xa8, 0xee, 0x34, 0xda, 0x80, 0x5a, 0xcc, 0xa6, 0x2c, 0xb8, 0x65, 0xe4, 0x80, 0x1e,
	0x43, 0x2d, 0x8c, 0xc7, 0x63, 0x0c, 0x43, 0xf2, 0x61, 0x50, 0x02, 0x0d, 0xc7, 0x76, 0x05, 0xc7,
	0x9b, 0x18, 0xc3, 0x88, 0x3c, 0x9b, 0xb4, 0x09, 0xf5, 0x49, 0xc0, 0x1d, 0xcf, 0x75, 0x91, 0x91,
	0x97, 0x92, 0x59, 0x10, 0x89, 0x49, 0x10, 0x33, 0x97, 0xbc, 0x9a, 0xf4, 0x1c, 0xac, 0xbd, 0x2d,
	0x90, 0x45, 0x5e, 0x74, 0x27, 0xa2, 0x20, 0x10, 0xbe, 0xcd, 0xaf, 0x90, 0xbc, 0x99, 0xb4, 0x03,
	0x6d, 0x8f, 0x45, 0xc8, 0x99, 0xed, 0x8b, 0x10, 0xf9, 0x1c, 0xb9, 0x40, 0xce, 0x03, 0x4e, 0x3e,
	0x4d, 0x7a, 0x06, 0xad, 0xe2, 0x94, 0x37, 0xbb, 0xf6, 0x71, 0x86, 0x2c, 0x42, 0x97, 0x7c, 0x99,
	0xd4, 0x82, 0xd3, 0x42, 0xf4, 0xc6, 0x28, 0x62, 0x66, 0xcf, 0x6d, 0xcf, 0xb7, 0x1d, 0x1f, 0xc9,
	0xb7, 0x39, 0x9c, 0x40, 0xcb, 0xd6, 0xf2, 0x69, 0xb5, 0xf8, 0xad, 0x42, 0x47, 0x50, 0xff, 0x83,
	0x46, 0x91, 0x62, 0x96, 0x29, 0x95, 0x3c, 0x64, 0x9d, 0x76, 0x01, 0xff, 0xf2, 0xf5, 0x8d, 0x4b,
	0x23, 0xad, 0x96, 0x79, 0x47, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xb0, 0xa4, 0x2c, 0x7e,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AtomicBroadcastClient is the client API for AtomicBroadcast service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AtomicBroadcastClient interface {
	Broadcast(ctx context.Context, opts ...grpc.CallOption) (AtomicBroadcast_BroadcastClient, error)
}

type atomicBroadcastClient struct {
	cc *grpc.ClientConn
}

func NewAtomicBroadcastClient(cc *grpc.ClientConn) AtomicBroadcastClient {
	return &atomicBroadcastClient{cc}
}

func (c *atomicBroadcastClient) Broadcast(ctx context.Context, opts ...grpc.CallOption) (AtomicBroadcast_BroadcastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AtomicBroadcast_serviceDesc.Streams[0], "/pb.AtomicBroadcast/Broadcast", opts...)
	if err != nil {
		return nil, err
	}
	x := &atomicBroadcastBroadcastClient{stream}
	return x, nil
}

type AtomicBroadcast_BroadcastClient interface {
	Send(*Message) error
	Recv() (*BroadcastResponse, error)
	grpc.ClientStream
}

type atomicBroadcastBroadcastClient struct {
	grpc.ClientStream
}

func (x *atomicBroadcastBroadcastClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *atomicBroadcastBroadcastClient) Recv() (*BroadcastResponse, error) {
	m := new(BroadcastResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AtomicBroadcastServer is the server API for AtomicBroadcast service.
type AtomicBroadcastServer interface {
	Broadcast(AtomicBroadcast_BroadcastServer) error
}

// UnimplementedAtomicBroadcastServer can be embedded to have forward compatible implementations.
type UnimplementedAtomicBroadcastServer struct {
}

func (*UnimplementedAtomicBroadcastServer) Broadcast(srv AtomicBroadcast_BroadcastServer) error {
	return status.Errorf(codes.Unimplemented, "method Broadcast not implemented")
}

func RegisterAtomicBroadcastServer(s *grpc.Server, srv AtomicBroadcastServer) {
	s.RegisterService(&_AtomicBroadcast_serviceDesc, srv)
}

func _AtomicBroadcast_Broadcast_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AtomicBroadcastServer).Broadcast(&atomicBroadcastBroadcastServer{stream})
}

type AtomicBroadcast_BroadcastServer interface {
	Send(*BroadcastResponse) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type atomicBroadcastBroadcastServer struct {
	grpc.ServerStream
}

func (x *atomicBroadcastBroadcastServer) Send(m *BroadcastResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *atomicBroadcastBroadcastServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AtomicBroadcast_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AtomicBroadcast",
	HandlerType: (*AtomicBroadcastServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Broadcast",
			Handler:       _AtomicBroadcast_Broadcast_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "ab.proto",
}
