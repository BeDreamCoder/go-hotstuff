// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hotstuff.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// These status codes are intended to resemble selected HTTP status codes
type Status int32

const (
	Status_UNKNOWN                  Status = 0
	Status_SUCCESS                  Status = 200
	Status_BAD_REQUEST              Status = 400
	Status_FORBIDDEN                Status = 403
	Status_NOT_FOUND                Status = 404
	Status_REQUEST_ENTITY_TOO_LARGE Status = 413
	Status_INTERNAL_SERVER_ERROR    Status = 500
	Status_NOT_IMPLEMENTED          Status = 501
	Status_SERVICE_UNAVAILABLE      Status = 503
)

var Status_name = map[int32]string{
	0:   "UNKNOWN",
	200: "SUCCESS",
	400: "BAD_REQUEST",
	403: "FORBIDDEN",
	404: "NOT_FOUND",
	413: "REQUEST_ENTITY_TOO_LARGE",
	500: "INTERNAL_SERVER_ERROR",
	501: "NOT_IMPLEMENTED",
	503: "SERVICE_UNAVAILABLE",
}

var Status_value = map[string]int32{
	"UNKNOWN":                  0,
	"SUCCESS":                  200,
	"BAD_REQUEST":              400,
	"FORBIDDEN":                403,
	"NOT_FOUND":                404,
	"REQUEST_ENTITY_TOO_LARGE": 413,
	"INTERNAL_SERVER_ERROR":    500,
	"NOT_IMPLEMENTED":          501,
	"SERVICE_UNAVAILABLE":      503,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8517aa0e19c54851, []int{0}
}

// Sign verify part cert info
type PartCert struct {
	ReplicaId            int64    `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartCert) Reset()         { *m = PartCert{} }
func (m *PartCert) String() string { return proto.CompactTextString(m) }
func (*PartCert) ProtoMessage()    {}
func (*PartCert) Descriptor() ([]byte, []int) {
	return fileDescriptor_8517aa0e19c54851, []int{0}
}

func (m *PartCert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartCert.Unmarshal(m, b)
}
func (m *PartCert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartCert.Marshal(b, m, deterministic)
}
func (m *PartCert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartCert.Merge(m, src)
}
func (m *PartCert) XXX_Size() int {
	return xxx_messageInfo_PartCert.Size(m)
}
func (m *PartCert) XXX_DiscardUnknown() {
	xxx_messageInfo_PartCert.DiscardUnknown(m)
}

var xxx_messageInfo_PartCert proto.InternalMessageInfo

func (m *PartCert) GetReplicaId() int64 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

func (m *PartCert) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// QuorumCert is a data type that combines a collection of signatures from replicas.
type QuorumCert struct {
	// view number
	ViewNumber int64 `protobuf:"varint,1,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	// The hash of block data.
	BlockHash []byte `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// the votes of the leader gathered from replicas for proposal.
	Signs                map[int64]*PartCert `protobuf:"bytes,3,rep,name=signs,proto3" json:"signs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *QuorumCert) Reset()         { *m = QuorumCert{} }
func (m *QuorumCert) String() string { return proto.CompactTextString(m) }
func (*QuorumCert) ProtoMessage()    {}
func (*QuorumCert) Descriptor() ([]byte, []int) {
	return fileDescriptor_8517aa0e19c54851, []int{1}
}

func (m *QuorumCert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuorumCert.Unmarshal(m, b)
}
func (m *QuorumCert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuorumCert.Marshal(b, m, deterministic)
}
func (m *QuorumCert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuorumCert.Merge(m, src)
}
func (m *QuorumCert) XXX_Size() int {
	return xxx_messageInfo_QuorumCert.Size(m)
}
func (m *QuorumCert) XXX_DiscardUnknown() {
	xxx_messageInfo_QuorumCert.DiscardUnknown(m)
}

var xxx_messageInfo_QuorumCert proto.InternalMessageInfo

func (m *QuorumCert) GetViewNumber() int64 {
	if m != nil {
		return m.ViewNumber
	}
	return 0
}

func (m *QuorumCert) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *QuorumCert) GetSigns() map[int64]*PartCert {
	if m != nil {
		return m.Signs
	}
	return nil
}

// The wrapper of block struct
type Block struct {
	// parent_hash is the parent hash of the block
	ParentHash []byte `protobuf:"bytes,1,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	// Any data needed to exec, like: block, tx...
	Cmds []byte `protobuf:"bytes,2,opt,name=cmds,proto3" json:"cmds,omitempty"`
	// The miner's address of current block
	Proposer int64 `protobuf:"varint,3,opt,name=proposer,proto3" json:"proposer,omitempty"`
	// The height of the blockchain
	Height int64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// Timestamp of the block
	Timestamp int64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// qc of cmd for parent block
	Justify *QuorumCert `protobuf:"bytes,6,opt,name=justify,proto3" json:"justify,omitempty"`
	// qc of cmd for self
	SelfQc               *QuorumCert `protobuf:"bytes,7,opt,name=self_qc,json=selfQc,proto3" json:"self_qc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_8517aa0e19c54851, []int{2}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetParentHash() []byte {
	if m != nil {
		return m.ParentHash
	}
	return nil
}

func (m *Block) GetCmds() []byte {
	if m != nil {
		return m.Cmds
	}
	return nil
}

func (m *Block) GetProposer() int64 {
	if m != nil {
		return m.Proposer
	}
	return 0
}

func (m *Block) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Block) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block) GetJustify() *QuorumCert {
	if m != nil {
		return m.Justify
	}
	return nil
}

func (m *Block) GetSelfQc() *QuorumCert {
	if m != nil {
		return m.SelfQc
	}
	return nil
}

// Types of communication messages between replicas
type Message struct {
	// Types that are valid to be assigned to Type:
	//	*Message_NewView
	//	*Message_Proposal
	//	*Message_Vote
	Type                 isMessage_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_8517aa0e19c54851, []int{3}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

type isMessage_Type interface {
	isMessage_Type()
}

type Message_NewView struct {
	NewView *NewView `protobuf:"bytes,1,opt,name=new_view,json=newView,proto3,oneof"`
}

type Message_Proposal struct {
	Proposal *Proposal `protobuf:"bytes,2,opt,name=proposal,proto3,oneof"`
}

type Message_Vote struct {
	Vote *Vote `protobuf:"bytes,3,opt,name=vote,proto3,oneof"`
}

func (*Message_NewView) isMessage_Type() {}

func (*Message_Proposal) isMessage_Type() {}

func (*Message_Vote) isMessage_Type() {}

func (m *Message) GetType() isMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Message) GetNewView() *NewView {
	if x, ok := m.GetType().(*Message_NewView); ok {
		return x.NewView
	}
	return nil
}

func (m *Message) GetProposal() *Proposal {
	if x, ok := m.GetType().(*Message_Proposal); ok {
		return x.Proposal
	}
	return nil
}

func (m *Message) GetVote() *Vote {
	if x, ok := m.GetType().(*Message_Vote); ok {
		return x.Vote
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_NewView)(nil),
		(*Message_Proposal)(nil),
		(*Message_Vote)(nil),
	}
}

// new view msg
type NewView struct {
	ViewNumber           int64       `protobuf:"varint,1,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	GenericQc            *QuorumCert `protobuf:"bytes,2,opt,name=generic_qc,json=genericQc,proto3" json:"generic_qc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NewView) Reset()         { *m = NewView{} }
func (m *NewView) String() string { return proto.CompactTextString(m) }
func (*NewView) ProtoMessage()    {}
func (*NewView) Descriptor() ([]byte, []int) {
	return fileDescriptor_8517aa0e19c54851, []int{4}
}

func (m *NewView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewView.Unmarshal(m, b)
}
func (m *NewView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewView.Marshal(b, m, deterministic)
}
func (m *NewView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewView.Merge(m, src)
}
func (m *NewView) XXX_Size() int {
	return xxx_messageInfo_NewView.Size(m)
}
func (m *NewView) XXX_DiscardUnknown() {
	xxx_messageInfo_NewView.DiscardUnknown(m)
}

var xxx_messageInfo_NewView proto.InternalMessageInfo

func (m *NewView) GetViewNumber() int64 {
	if m != nil {
		return m.ViewNumber
	}
	return 0
}

func (m *NewView) GetGenericQc() *QuorumCert {
	if m != nil {
		return m.GenericQc
	}
	return nil
}

// broadcast proposal to other replicas
type Proposal struct {
	ViewNumber           int64    `protobuf:"varint,1,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	Proposer             int64    `protobuf:"varint,2,opt,name=proposer,proto3" json:"proposer,omitempty"`
	Block                *Block   `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Proposal) Reset()         { *m = Proposal{} }
func (m *Proposal) String() string { return proto.CompactTextString(m) }
func (*Proposal) ProtoMessage()    {}
func (*Proposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_8517aa0e19c54851, []int{5}
}

func (m *Proposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proposal.Unmarshal(m, b)
}
func (m *Proposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proposal.Marshal(b, m, deterministic)
}
func (m *Proposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proposal.Merge(m, src)
}
func (m *Proposal) XXX_Size() int {
	return xxx_messageInfo_Proposal.Size(m)
}
func (m *Proposal) XXX_DiscardUnknown() {
	xxx_messageInfo_Proposal.DiscardUnknown(m)
}

var xxx_messageInfo_Proposal proto.InternalMessageInfo

func (m *Proposal) GetViewNumber() int64 {
	if m != nil {
		return m.ViewNumber
	}
	return 0
}

func (m *Proposal) GetProposer() int64 {
	if m != nil {
		return m.Proposer
	}
	return 0
}

func (m *Proposal) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

// Vote messages
type Vote struct {
	ViewNumber int64 `protobuf:"varint,1,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	// Voter replica id
	Voter int64 `protobuf:"varint,2,opt,name=voter,proto3" json:"voter,omitempty"`
	// The hash of block being voted
	BlockHash []byte `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// Proof of validity for the vote
	Cert                 *PartCert `protobuf:"bytes,4,opt,name=cert,proto3" json:"cert,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Vote) Reset()         { *m = Vote{} }
func (m *Vote) String() string { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()    {}
func (*Vote) Descriptor() ([]byte, []int) {
	return fileDescriptor_8517aa0e19c54851, []int{6}
}

func (m *Vote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vote.Unmarshal(m, b)
}
func (m *Vote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vote.Marshal(b, m, deterministic)
}
func (m *Vote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vote.Merge(m, src)
}
func (m *Vote) XXX_Size() int {
	return xxx_messageInfo_Vote.Size(m)
}
func (m *Vote) XXX_DiscardUnknown() {
	xxx_messageInfo_Vote.DiscardUnknown(m)
}

var xxx_messageInfo_Vote proto.InternalMessageInfo

func (m *Vote) GetViewNumber() int64 {
	if m != nil {
		return m.ViewNumber
	}
	return 0
}

func (m *Vote) GetVoter() int64 {
	if m != nil {
		return m.Voter
	}
	return 0
}

func (m *Vote) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *Vote) GetCert() *PartCert {
	if m != nil {
		return m.Cert
	}
	return nil
}

type ConfigMetadata struct {
	// Number of nodes
	N int64 `protobuf:"varint,1,opt,name=n,proto3" json:"n,omitempty"`
	// Fault tolerance
	F int64 `protobuf:"varint,2,opt,name=f,proto3" json:"f,omitempty"`
	// Timeout of msg wait (seconds)
	MsgWaitTimeout       int64    `protobuf:"varint,3,opt,name=msg_wait_timeout,json=msgWaitTimeout,proto3" json:"msg_wait_timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigMetadata) Reset()         { *m = ConfigMetadata{} }
func (m *ConfigMetadata) String() string { return proto.CompactTextString(m) }
func (*ConfigMetadata) ProtoMessage()    {}
func (*ConfigMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_8517aa0e19c54851, []int{7}
}

func (m *ConfigMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigMetadata.Unmarshal(m, b)
}
func (m *ConfigMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigMetadata.Marshal(b, m, deterministic)
}
func (m *ConfigMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigMetadata.Merge(m, src)
}
func (m *ConfigMetadata) XXX_Size() int {
	return xxx_messageInfo_ConfigMetadata.Size(m)
}
func (m *ConfigMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigMetadata proto.InternalMessageInfo

func (m *ConfigMetadata) GetN() int64 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *ConfigMetadata) GetF() int64 {
	if m != nil {
		return m.F
	}
	return 0
}

func (m *ConfigMetadata) GetMsgWaitTimeout() int64 {
	if m != nil {
		return m.MsgWaitTimeout
	}
	return 0
}

type SubmitRequest struct {
	Cmds                 []byte   `protobuf:"bytes,1,opt,name=cmds,proto3" json:"cmds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitRequest) Reset()         { *m = SubmitRequest{} }
func (m *SubmitRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitRequest) ProtoMessage()    {}
func (*SubmitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8517aa0e19c54851, []int{8}
}

func (m *SubmitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitRequest.Unmarshal(m, b)
}
func (m *SubmitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitRequest.Marshal(b, m, deterministic)
}
func (m *SubmitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitRequest.Merge(m, src)
}
func (m *SubmitRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitRequest.Size(m)
}
func (m *SubmitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitRequest proto.InternalMessageInfo

func (m *SubmitRequest) GetCmds() []byte {
	if m != nil {
		return m.Cmds
	}
	return nil
}

type SubmitResponse struct {
	// Status code, which may be used to programatically respond to success/failure
	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.Status" json:"status,omitempty"`
	// Info string which may contain additional information about the status returned
	Info                 string   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitResponse) Reset()         { *m = SubmitResponse{} }
func (m *SubmitResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitResponse) ProtoMessage()    {}
func (*SubmitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8517aa0e19c54851, []int{9}
}

func (m *SubmitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitResponse.Unmarshal(m, b)
}
func (m *SubmitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitResponse.Marshal(b, m, deterministic)
}
func (m *SubmitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitResponse.Merge(m, src)
}
func (m *SubmitResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitResponse.Size(m)
}
func (m *SubmitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitResponse proto.InternalMessageInfo

func (m *SubmitResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UNKNOWN
}

func (m *SubmitResponse) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.Status", Status_name, Status_value)
	proto.RegisterType((*PartCert)(nil), "pb.PartCert")
	proto.RegisterType((*QuorumCert)(nil), "pb.QuorumCert")
	proto.RegisterMapType((map[int64]*PartCert)(nil), "pb.QuorumCert.SignsEntry")
	proto.RegisterType((*Block)(nil), "pb.Block")
	proto.RegisterType((*Message)(nil), "pb.Message")
	proto.RegisterType((*NewView)(nil), "pb.NewView")
	proto.RegisterType((*Proposal)(nil), "pb.Proposal")
	proto.RegisterType((*Vote)(nil), "pb.Vote")
	proto.RegisterType((*ConfigMetadata)(nil), "pb.ConfigMetadata")
	proto.RegisterType((*SubmitRequest)(nil), "pb.SubmitRequest")
	proto.RegisterType((*SubmitResponse)(nil), "pb.SubmitResponse")
}

func init() { proto.RegisterFile("hotstuff.proto", fileDescriptor_8517aa0e19c54851) }

var fileDescriptor_8517aa0e19c54851 = []byte{
	// 811 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0x4d, 0x8f, 0xe3, 0x44,
	0x10, 0x1d, 0xc7, 0xf9, 0x2c, 0x0f, 0xc1, 0x34, 0x0b, 0x32, 0x23, 0x96, 0x1d, 0x99, 0x03, 0xd1,
	0x4a, 0xcc, 0x4a, 0xe1, 0x82, 0xe0, 0x94, 0x8f, 0x9e, 0x4d, 0x44, 0xc6, 0xd9, 0x69, 0x3b, 0x59,
	0xed, 0xc9, 0xea, 0x78, 0xda, 0x89, 0xd9, 0xf8, 0x63, 0xdd, 0xed, 0x89, 0xe6, 0xc2, 0x95, 0x2b,
	0x12, 0x5c, 0xf9, 0x2f, 0x5c, 0x90, 0xf8, 0x1b, 0xfc, 0x07, 0x10, 0x57, 0xd4, 0x6d, 0x67, 0x66,
	0x36, 0x1a, 0x69, 0x6e, 0x5d, 0xaf, 0xca, 0x55, 0xaf, 0x5e, 0x3f, 0x37, 0x74, 0x37, 0xa9, 0xe0,
	0xa2, 0x08, 0xc3, 0xb3, 0x2c, 0x4f, 0x45, 0x8a, 0x6a, 0xd9, 0xca, 0x7e, 0x09, 0xed, 0x57, 0x34,
	0x17, 0x23, 0x96, 0x0b, 0xf4, 0x14, 0x20, 0x67, 0xd9, 0x36, 0x0a, 0xa8, 0x1f, 0x5d, 0x59, 0xda,
	0xa9, 0xd6, 0xd3, 0x49, 0xa7, 0x42, 0xa6, 0x57, 0xe8, 0x73, 0xe8, 0xf0, 0x68, 0x9d, 0x50, 0x51,
	0xe4, 0xcc, 0xaa, 0x9d, 0x6a, 0xbd, 0x63, 0x72, 0x07, 0xd8, 0x7f, 0x6a, 0x00, 0x97, 0x45, 0x9a,
	0x17, 0xb1, 0xea, 0xf5, 0x0c, 0x8c, 0xeb, 0x88, 0xed, 0xfc, 0xa4, 0x88, 0x57, 0x2c, 0xaf, 0x9a,
	0x81, 0x84, 0x1c, 0x85, 0xc8, 0x61, 0xab, 0x6d, 0x1a, 0xbc, 0xf5, 0x37, 0x94, 0x6f, 0xf6, 0xed,
	0x14, 0x32, 0xa1, 0x7c, 0x83, 0x5e, 0x40, 0x43, 0xf6, 0xe6, 0x96, 0x7e, 0xaa, 0xf7, 0x8c, 0xfe,
	0x67, 0x67, 0xd9, 0xea, 0xec, 0xae, 0xfd, 0x99, 0x2b, 0x73, 0x38, 0x11, 0xf9, 0x0d, 0x29, 0xeb,
	0x4e, 0xce, 0x01, 0xee, 0x40, 0x64, 0x82, 0xfe, 0x96, 0xdd, 0x54, 0x63, 0xe5, 0x11, 0xd9, 0xd0,
	0xb8, 0xa6, 0xdb, 0xa2, 0x64, 0x6e, 0xf4, 0x8f, 0x65, 0xc3, 0xfd, 0xe6, 0xa4, 0x4c, 0x7d, 0x57,
	0xfb, 0x56, 0xb3, 0xff, 0xd6, 0xa0, 0x31, 0x94, 0x34, 0xe4, 0x0a, 0x19, 0xcd, 0x59, 0x22, 0x4a,
	0x8a, 0x9a, 0xa2, 0x08, 0x25, 0xa4, 0x38, 0x22, 0xa8, 0x07, 0xf1, 0x15, 0xaf, 0xc8, 0xab, 0x33,
	0x3a, 0x81, 0x76, 0x96, 0xa7, 0x59, 0xca, 0x59, 0x6e, 0xe9, 0x6a, 0xfa, 0x6d, 0x8c, 0x3e, 0x85,
	0xe6, 0x86, 0x45, 0xeb, 0x8d, 0xb0, 0xea, 0x2a, 0x53, 0x45, 0x52, 0x58, 0x11, 0xc5, 0x8c, 0x0b,
	0x1a, 0x67, 0x56, 0xa3, 0x94, 0xfd, 0x16, 0x40, 0x3d, 0x68, 0xfd, 0x58, 0x70, 0x11, 0x85, 0x37,
	0x56, 0x53, 0x51, 0xef, 0xbe, 0xaf, 0x05, 0xd9, 0xa7, 0xd1, 0x57, 0xd0, 0xe2, 0x6c, 0x1b, 0xfa,
	0xef, 0x02, 0xab, 0xf5, 0x60, 0x65, 0x53, 0xa6, 0x2f, 0x03, 0xfb, 0x67, 0x0d, 0x5a, 0x17, 0x8c,
	0x73, 0xba, 0x66, 0xa8, 0x07, 0xed, 0x84, 0xed, 0x7c, 0x79, 0x33, 0x6a, 0x45, 0xa3, 0x6f, 0xc8,
	0xaf, 0x1c, 0xb6, 0x5b, 0x46, 0x6c, 0x37, 0x39, 0x22, 0xad, 0xa4, 0x3c, 0xa2, 0xe7, 0xfb, 0xd5,
	0xe8, 0xf6, 0x3d, 0x11, 0x2b, 0x6c, 0x72, 0x44, 0x6e, 0xf3, 0xe8, 0x0b, 0xa8, 0x5f, 0xa7, 0x82,
	0x29, 0x09, 0x8c, 0x7e, 0x5b, 0xd6, 0x2d, 0x53, 0xc1, 0x26, 0x47, 0x44, 0xe1, 0xc3, 0x26, 0xd4,
	0xc5, 0x4d, 0xc6, 0xec, 0x37, 0xd0, 0xaa, 0x26, 0x3d, 0xee, 0x98, 0xaf, 0x01, 0xd6, 0x2c, 0x61,
	0x79, 0x14, 0xc8, 0x0d, 0x6b, 0x0f, 0x6e, 0xd8, 0xa9, 0x2a, 0x2e, 0x03, 0x7b, 0x03, 0xed, 0x3d,
	0xb5, 0xc7, 0x7b, 0xdf, 0xbf, 0xb6, 0xda, 0xc1, 0xb5, 0x3d, 0x83, 0x86, 0xf2, 0x65, 0xb5, 0x4c,
	0x47, 0x8e, 0x54, 0x0e, 0x21, 0x25, 0x6e, 0xff, 0x04, 0x75, 0xb9, 0xdc, 0xe3, 0x53, 0x9e, 0x40,
	0x43, 0x6e, 0xbf, 0x1f, 0x51, 0x06, 0x07, 0x7f, 0x82, 0x7e, 0xf8, 0x27, 0x9c, 0x42, 0x3d, 0x60,
	0x79, 0xe9, 0x99, 0x43, 0xdf, 0xaa, 0x8c, 0xbd, 0x84, 0xee, 0x28, 0x4d, 0xc2, 0x68, 0x7d, 0xc1,
	0x04, 0xbd, 0xa2, 0x82, 0xa2, 0x63, 0xd0, 0x92, 0x6a, 0xbe, 0x96, 0xc8, 0x28, 0xac, 0x46, 0x6a,
	0x21, 0xea, 0x81, 0x19, 0xf3, 0xb5, 0xbf, 0xa3, 0x91, 0xf0, 0xa5, 0xcb, 0xd2, 0x42, 0x54, 0x4e,
	0xed, 0xc6, 0x7c, 0xfd, 0x9a, 0x46, 0xc2, 0x2b, 0x51, 0xfb, 0x4b, 0xf8, 0xc0, 0x2d, 0x56, 0x71,
	0x24, 0x08, 0x7b, 0x57, 0x30, 0x2e, 0x6e, 0x0d, 0xaf, 0xdd, 0x19, 0xde, 0x9e, 0x40, 0x77, 0x5f,
	0xc4, 0xb3, 0x34, 0xe1, 0x0c, 0xd9, 0xd0, 0xe4, 0x82, 0x8a, 0xa2, 0xac, 0xeb, 0xf6, 0x41, 0x52,
	0x76, 0x15, 0x42, 0xaa, 0x8c, 0xec, 0x14, 0x25, 0x61, 0xaa, 0x58, 0x75, 0x88, 0x3a, 0x3f, 0xff,
	0x43, 0x83, 0x66, 0x59, 0x86, 0x0c, 0x68, 0x2d, 0x9c, 0x1f, 0x9c, 0xf9, 0x6b, 0xc7, 0x3c, 0x42,
	0xc7, 0xd0, 0x72, 0x17, 0xa3, 0x11, 0x76, 0x5d, 0xf3, 0x2f, 0x0d, 0x99, 0x60, 0x0c, 0x07, 0x63,
	0x9f, 0xe0, 0xcb, 0x05, 0x76, 0x3d, 0xf3, 0x17, 0x1d, 0x75, 0xa1, 0x73, 0x3e, 0x27, 0xc3, 0xe9,
	0x78, 0x8c, 0x1d, 0xf3, 0x57, 0x15, 0x3b, 0x73, 0xcf, 0x3f, 0x9f, 0x2f, 0x9c, 0xb1, 0xf9, 0x9b,
	0x8e, 0x9e, 0x82, 0x55, 0x55, 0xfb, 0xd8, 0xf1, 0xa6, 0xde, 0x1b, 0xdf, 0x9b, 0xcf, 0xfd, 0xd9,
	0x80, 0xbc, 0xc4, 0xe6, 0xef, 0x3a, 0x3a, 0x81, 0x4f, 0xa6, 0x8e, 0x87, 0x89, 0x33, 0x98, 0xf9,
	0x2e, 0x26, 0x4b, 0x4c, 0x7c, 0x4c, 0xc8, 0x9c, 0x98, 0xff, 0xe8, 0xe8, 0x09, 0x7c, 0x28, 0x5b,
	0x4d, 0x2f, 0x5e, 0xcd, 0xf0, 0x05, 0x76, 0x3c, 0x3c, 0x36, 0xff, 0xd5, 0x91, 0x05, 0x1f, 0xcb,
	0xc2, 0xe9, 0x08, 0xfb, 0x0b, 0x67, 0xb0, 0x1c, 0x4c, 0x67, 0x83, 0xe1, 0x0c, 0x9b, 0xff, 0xe9,
	0xfd, 0xef, 0xa1, 0x3d, 0xa9, 0xde, 0x58, 0xf4, 0x02, 0x9a, 0xa5, 0x30, 0xe8, 0x23, 0x25, 0xc0,
	0x7d, 0x25, 0x4f, 0xd0, 0x7d, 0xa8, 0xd4, 0x6d, 0xd5, 0x54, 0xaf, 0xf2, 0x37, 0xff, 0x07, 0x00,
	0x00, 0xff, 0xff, 0x0e, 0x42, 0x5c, 0xc2, 0xa7, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HotstuffClient is the client API for Hotstuff service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HotstuffClient interface {
	Submit(ctx context.Context, in *SubmitRequest, opts ...grpc.CallOption) (*SubmitResponse, error)
}

type hotstuffClient struct {
	cc *grpc.ClientConn
}

func NewHotstuffClient(cc *grpc.ClientConn) HotstuffClient {
	return &hotstuffClient{cc}
}

func (c *hotstuffClient) Submit(ctx context.Context, in *SubmitRequest, opts ...grpc.CallOption) (*SubmitResponse, error) {
	out := new(SubmitResponse)
	err := c.cc.Invoke(ctx, "/pb.Hotstuff/Submit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HotstuffServer is the server API for Hotstuff service.
type HotstuffServer interface {
	Submit(context.Context, *SubmitRequest) (*SubmitResponse, error)
}

// UnimplementedHotstuffServer can be embedded to have forward compatible implementations.
type UnimplementedHotstuffServer struct {
}

func (*UnimplementedHotstuffServer) Submit(ctx context.Context, req *SubmitRequest) (*SubmitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Submit not implemented")
}

func RegisterHotstuffServer(s *grpc.Server, srv HotstuffServer) {
	s.RegisterService(&_Hotstuff_serviceDesc, srv)
}

func _Hotstuff_Submit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotstuffServer).Submit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hotstuff/Submit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotstuffServer).Submit(ctx, req.(*SubmitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hotstuff_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Hotstuff",
	HandlerType: (*HotstuffServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Submit",
			Handler:    _Hotstuff_Submit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hotstuff.proto",
}
